plugins {
    id 'java'
    id 'application'
    id 'org.cadixdev.licenser' version '0.6.1'
}

group = project.maven_group
version = project.version
archivesBaseName = project.archives_base_name

def targetJavaVersion = 17

repositories {
    mavenCentral()
}

dependencies {
    implementation 'it.unimi.dsi:fastutil:8.5.6'
    implementation 'org.jetbrains:annotations:22.0.0'
    implementation 'org.joml:joml:1.10.2'
    implementation 'org.lwjgl.osgi:org.lwjgl.stb:3.2.1.2'
}

java {
    sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
    targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

    withSourcesJar()
}

application {
    mainClass = 'dev.lambdaurora.res_errare.ResErrare'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'dev.lambdaurora.res_errare.ResErrare'
        )
    }
}

license {
    header file('HEADER')
    include '**/*.java'
}

tasks.withType(JavaCompile).configureEach {
    it.options.forkOptions.jvmArgs = [
            "--add-opens", "jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED"
    ]

    it.options.compilerArgs = [
            "--add-modules", "jdk.incubator.foreign"
    ]

    it.options.encoding = 'UTF-8'

    it.options.release.set(targetJavaVersion)
}

tasks.withType(JavaExec).configureEach {
    it.jvmArgs("--enable-native-access=ALL-UNNAMED",
            "--add-modules", "jdk.incubator.foreign")
}

tasks.withType(Test).configureEach {
    it.useJUnitPlatform()
    it.jvmArgs("-Dforeign.restricted=permit",
            "--add-modules", "jdk.incubator.foreign")
}
